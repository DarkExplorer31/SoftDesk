FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# Documentation technique de l'API Softdesk

This document contains comprehensive details to enable users to utilize the API successfully.

This API aims to offer a project management service across various platforms, 
catering to diverse use cases such as iOS, Android, Front-end, and Back-end development.

With this API, authenticated users can:

Create a project, assuming the roles of both the author and contributor.

Choose additional contributors for a project.

Retrieve all data associated with an existing project.

If a user becomes a contributor to a project, he have the ability to create issues, comment on the project, and actively manage it.

## Authentication [/authentication]
### How To Authenticate? [GET]

+ Response 200 (application/json)


## Endpoints [/endpoints]
### Endpoints about User [GET]

+ Response 200 (application/json)

### Endpoints about Contributors [GET]

+ Response 200 (application/json)

### Endpoints about Project [GET]

+ Response 200 (application/json)

### Endpoints about Issue [GET]

+ Response 200 (application/json)

### Endpoints about Comment [GET]

+ Response 200 (application/json)

## Request and Response Formats[/requests]
## Parameters [/parameters]
## Error Handling [/errors]
## Code exemples [/exemples]
## Security Considerations [/security]
## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }